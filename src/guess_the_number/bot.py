import random

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from config_reader import env
from user import get_user

bot = Bot(token=env('BOT_TOKEN'))
dp = Dispatcher()

ATTEMPT_LIMIT = 5


@dp.message(CommandStart())
async def process_start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç. –î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"!\n'
                         '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /help')


@dp.message(Command('help'))
async def process_help(message: Message):
    await message.answer(f'–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n\n'
                         f'–Ø –∑–∞–≥–∞–¥—ã–≤–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, –∞ –≤–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ —É–≥–∞–¥–∞—Ç—å\n'
                         f'–£ –≤–∞—Å –µ—Å—Ç—å {ATTEMPT_LIMIT} –ø–æ–ø—ã—Ç–æ–∫\n\n'
                         f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n'
                         f'/help - –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n'
                         f'/cancel - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã\n'
                         f'/stat - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n'
                         f'–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º?'
                         )


@dp.message(Command('stat'))
async def process_stat(message: Message):
    user = get_user(message.from_user.id)
    await message.reply(f'–í—Å–µ–≥–æ —Å—ã–≥—Ä–∞–Ω–æ - {user.total_games}\n'
                        f'–ü–æ–±–µ–¥ - {user.wins}')


@dp.message(Command('cancel'))
async def process_cancel(message: Message):
    user = get_user(message.from_user.id)
    if user.in_game:
        user.in_game = False
        await message.answer('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã. –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º')
    else:
        await message.answer('–ê –º—ã –∏ —Ç–∞–∫ –Ω–µ –∏–≥—Ä–∞–µ–º. –ú–æ–∂–µ—Ç —Å—ã–≥—Ä–∞–µ–º —Ä–∞–∑–æ–∫?)')


@dp.message(F.text.lower().in_(['–¥–∞–≤–∞–π', '–¥–∞', '—Å—ã–≥—Ä–∞–µ–º', '–∏–≥—Ä–∞', '–∏–≥—Ä–∞—Ç—å', '—Ö–æ—á—É –∏–≥—Ä–∞—Ç—å', '—Ö–æ—á—É –ø–æ–∏–≥—Ä–∞—Ç—å',
                                '–¥–∞–≤–∞–π –∏–≥—Ä–∞—Ç—å']))
async def process_positive_answer(message: Message):
    user = get_user(message.from_user.id)
    if user.in_game:
        await message.answer('–ü–æ–∫–∞ –º—ã –≤ –∏–≥—Ä–µ, —è –º–æ–≥—É —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100 –∏ –∫–æ–º–∞–Ω–¥—ã'
                             ' /cancel –∏ /stat')
    else:
        user.in_game = True
        user.attempts = ATTEMPT_LIMIT
        user.secret_number = random.randint(1, 100)
        await message.answer(f'–•–æ—Ä–æ—à–æ! –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100.\n'
                             f'–£ —Ç–µ–±—è –µ—Å—Ç—å {ATTEMPT_LIMIT} –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã –µ–≥–æ –æ—Ç–≥–∞–¥–∞—Ç—å')


@dp.message(F.text.lower().in_(['–Ω–µ', '–Ω–µ—Ç', '–Ω–µ –±—É–¥—É', '–Ω–µ —Ö–æ—á—É']))
async def process_negative_answer(message: Message):
    user = get_user(message.from_user.id)
    if user.in_game:
        await message.answer('–ü–æ–∫–∞ –º—ã –≤ –∏–≥—Ä–µ, —è –º–æ–≥—É —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100 –∏ –∫–æ–º–∞–Ω–¥—ã'
                             ' /cancel –∏ /stat')
    else:
        await message.answer(f'–õ–∞–¥–Ω–æ‚òπÔ∏è\n\n'
                             f'–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º')


@dp.message(lambda message: message.text and message.text.isdigit() and 1 <= int(message.text) <= 100)
async def process_number_answer(message: Message):
    user = get_user(message.from_user.id)
    if user.in_game:
        user.attempts -= 1
        if int(message.text) == user.secret_number:
            user.in_game = False
            user.total_games += 1
            user.wins += 1
            await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!\n\n–ú–æ–∂–µ—Ç —Å—ã–≥—Ä–∞–µ–º —Å–Ω–æ–≤–∞?;)')
        elif user.attempts == 0:
            user.in_game = False
            user.total_games += 1
            await message.answer(f'–≠—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞.\n\n'
                                 f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {user.secret_number}.'
                                 f'–î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –µ—â–µ –∏ –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à–∏ –Ω–∞–≤—ã–∫–∏ –≥–∞–¥–∞–ª–∫–∏üßê')
        elif int(message.text) > user.secret_number:
            await message.answer('–ú–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ')
        elif int(message.text) < user.secret_number:
            await message.answer('–ú–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ')
    else:
        await message.answer('–ú—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–µ–º. –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å?')


@dp.message()
async def process_other_answers(message: Message):
    user = get_user(message.from_user.id)
    if user.in_game:
        await message.answer(
            '–ú—ã –∂–µ —Å–µ–π—á–∞—Å —Å –≤–∞–º–∏ –∏–≥—Ä–∞–µ–º. '
            '–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100'
        )
    else:
        await message.answer(
            '–¢–∞–∫–∏—Ö –ø–æ–Ω—è—Ç–∏–π —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –¥–∞–≤–∞–π –ø—Ä–æ—Å—Ç–æ –ø–æ–∏–≥—Ä–∞–µ–ºüòâ'
        )


if __name__ == "__main__":
    dp.run_polling(bot)
